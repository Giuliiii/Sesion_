{"ast":null,"code":"import axios from 'axios';\nimport TodoItem from '@/components/TodoItem';\nconst client = axios.create({\n  baseURL: `${process.env.VUE_APP_GITHUB_ENDPOINT}`,\n  headers: {\n    'Accept': 'application/vnd.github.v3+json',\n    'Content-Type': 'application/json',\n    'Authorization': `token ${process.env.VUE_APP_GITHUB_TOKEN}`\n  }\n});\nexport default {\n  name: 'IssueList',\n  components: {\n    TodoItem\n  },\n  data() {\n    return {\n      issues: []\n    };\n  },\n  methods: {\n    getIssues() {\n      client.get('/issues').then(res => {\n        this.issues = res.data;\n      });\n    },\n    closeIssue(index) {\n      const target = this.issues[index];\n      client.patch(`/issues/${target.number}`, {\n        state: 'closed'\n      }).then(() => {\n        this.issues.splice(index, 1);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","TodoItem","client","create","baseURL","process","env","VUE_APP_GITHUB_ENDPOINT","headers","VUE_APP_GITHUB_TOKEN","name","components","data","issues","methods","getIssues","get","then","res","closeIssue","index","target","patch","number","state","splice"],"sources":["src/views/IssueList.vue"],"sourcesContent":["\r\n<template>\r\n    <div>\r\n      <el-button type=\"success\" round @click=\"getIssues()\">IssueList</el-button>\r\n      <el-row :gutter=\"12\">\r\n        <TodoItem v-for=\"( issue, index ) in issues\" :key=\"issue.id\" :issue=\"issue.title\" :index=\"index\" @closeIssue=\"closeIssue\"/>\r\n      </el-row>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import TodoItem from '@/components/TodoItem';\r\n  \r\n  const client = axios.create({\r\n    baseURL: `${process.env.VUE_APP_GITHUB_ENDPOINT}`,\r\n    headers: {\r\n      'Accept': 'application/vnd.github.v3+json',\r\n      'Content-Type':'application/json',\r\n      'Authorization': `token ${process.env.VUE_APP_GITHUB_TOKEN}`\r\n    },\r\n  })\r\n  \r\n  export default {\r\n    name: 'IssueList',\r\n    components: {\r\n      TodoItem\r\n    },\r\n    data() {\r\n      return {\r\n        issues: [],\r\n      }\r\n    },\r\n    methods: {\r\n      getIssues() {\r\n        client.get('/issues')\r\n          .then((res) => {\r\n            this.issues = res.data;\r\n        })\r\n      },\r\n      closeIssue(index){\r\n        const target = this.issues[index]\r\n        client.patch(`/issues/${target.number}`,\r\n            {\r\n              state: 'closed'\r\n            },\r\n          )\r\n          .then(() => {\r\n            this.issues.splice(index, 1)\r\n        })\r\n      },\r\n    },\r\n}\r\n</script>"],"mappings":"AAWA,OAAAA,KAAA;AACA,OAAAC,QAAA;AAEA,MAAAC,MAAA,GAAAF,KAAA,CAAAG,MAAA;EACAC,OAAA,KAAAC,OAAA,CAAAC,GAAA,CAAAC,uBAAA;EACAC,OAAA;IACA;IACA;IACA,0BAAAH,OAAA,CAAAC,GAAA,CAAAG,oBAAA;EACA;AACA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAV;EACA;EACAW,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACAb,MAAA,CAAAc,GAAA,YACAC,IAAA,CAAAC,GAAA;QACA,KAAAL,MAAA,GAAAK,GAAA,CAAAN,IAAA;MACA;IACA;IACAO,WAAAC,KAAA;MACA,MAAAC,MAAA,QAAAR,MAAA,CAAAO,KAAA;MACAlB,MAAA,CAAAoB,KAAA,YAAAD,MAAA,CAAAE,MAAA,IACA;QACAC,KAAA;MACA,CACA,EACAP,IAAA;QACA,KAAAJ,MAAA,CAAAY,MAAA,CAAAL,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}