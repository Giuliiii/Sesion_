{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport TodoItem from '@/components/TodoItem';\nconst client = axios.create({\n  baseURL: `${process.env.VUE_APP_GITHUB_ENDPOINT}`,\n  headers: {\n    'Authorization': `token ${process.env.VUE_APP_GITHUB_TOKEN}`,\n    'Accept': 'application/vnd.github.v3+json',\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  name: 'TodosIssues',\n  components: {\n    TodoItem\n  },\n  data() {\n    return {\n      todo: '',\n      todos: [],\n      issues: []\n    };\n  },\n  methods: {\n    addTodo() {\n      this.todos.push(this.todo);\n      this.todo = '';\n    },\n    removeTodo(index) {\n      this.todos.splice(index, 1);\n    },\n    closeIssue(index) {\n      const target = this.issues[index];\n      client.patch(`/issues/${target.number}`, {\n        state: 'closed'\n      }).then(() => {\n        this.issues.splice(index, 1);\n      });\n    },\n    getIssues() {\n      client.get('issues').then(res => {\n        this.issues = res.data;\n      });\n    }\n  },\n  created() {\n    this.getIssues();\n  }\n};","map":{"version":3,"names":["axios","TodoItem","client","create","baseURL","process","env","VUE_APP_GITHUB_ENDPOINT","headers","VUE_APP_GITHUB_TOKEN","name","components","data","todo","todos","issues","methods","addTodo","push","removeTodo","index","splice","closeIssue","target","patch","number","state","then","getIssues","get","res","created"],"sources":["src/views/TodosIssues.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>TodoとIssueリスト</h1>\r\n    <form @submit.prevent=\"addTodo()\">\r\n      <el-input placeholder=\"todo\" v-model=\"todo\"></el-input>\r\n    </form>\r\n    <el-row :gutter=\"12\">\r\n      <TodoItem v-for=\"( todo, index ) in todos\" :key=\"index\" :todo=\"todo\" @removeToDo=\"removeTodo\"/>\r\n      <TodoItem v-for=\"( issue, index ) in issues\" :key=\"issue.id\" :issue=\"issue.title\" :index=\"index\" @closeIssue=\"closeIssue\" />\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport TodoItem from '@/components/TodoItem';\r\n\r\nconst client = axios.create({\r\n  baseURL: `${process.env.VUE_APP_GITHUB_ENDPOINT}`,\r\n  headers: {\r\n    'Authorization': `token ${process.env.VUE_APP_GITHUB_TOKEN}`,\r\n    'Accept': 'application/vnd.github.v3+json',\r\n    'Content-Type':'application/json',\r\n  },\r\n})\r\n\r\nexport default {\r\n  name: 'TodosIssues',\r\n  components: {\r\n    TodoItem\r\n  },\r\n  data () {\r\n    return {\r\n      todo: '',\r\n      todos: [],\r\n      issues: []\r\n    }\r\n  },\r\n  methods: {\r\n    addTodo(){\r\n      this.todos.push(this.todo);\r\n      this.todo= '';\r\n    },\r\n    removeTodo(index){\r\n      this.todos.splice(index, 1);\r\n    },\r\n    closeIssue(index){\r\n      const target = this.issues[index];\r\n      client.patch(`/issues/${target.number}`,\r\n          {\r\n            state: 'closed'\r\n          },\r\n        )\r\n        .then(() => {\r\n         this.issues.splice(index, 1);\r\n      })\r\n    },\r\n    getIssues() {\r\n      client.get('issues')\r\n        .then((res) => {\r\n          this.issues = res.data\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.getIssues();\r\n  }\r\n}\r\n</script>"],"mappings":";AAcA,OAAAA,KAAA;AACA,OAAAC,QAAA;AAEA,MAAAC,MAAA,GAAAF,KAAA,CAAAG,MAAA;EACAC,OAAA,KAAAC,OAAA,CAAAC,GAAA,CAAAC,uBAAA;EACAC,OAAA;IACA,0BAAAH,OAAA,CAAAC,GAAA,CAAAG,oBAAA;IACA;IACA;EACA;AACA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAV;EACA;EACAW,KAAA;IACA;MACAC,IAAA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,KAAAH,KAAA,CAAAI,IAAA,MAAAL,IAAA;MACA,KAAAA,IAAA;IACA;IACAM,WAAAC,KAAA;MACA,KAAAN,KAAA,CAAAO,MAAA,CAAAD,KAAA;IACA;IACAE,WAAAF,KAAA;MACA,MAAAG,MAAA,QAAAR,MAAA,CAAAK,KAAA;MACAlB,MAAA,CAAAsB,KAAA,YAAAD,MAAA,CAAAE,MAAA,IACA;QACAC,KAAA;MACA,CACA,EACAC,IAAA;QACA,KAAAZ,MAAA,CAAAM,MAAA,CAAAD,KAAA;MACA;IACA;IACAQ,UAAA;MACA1B,MAAA,CAAA2B,GAAA,WACAF,IAAA,CAAAG,GAAA;QACA,KAAAf,MAAA,GAAAe,GAAA,CAAAlB,IAAA;MACA;IACA;EACA;EACAmB,QAAA;IACA,KAAAH,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}